2. Определить сложность следующих алгоритмов:
1) поиск элемента массива с известным индексом, 

Сложность O(1) - одна элементарная операция

2) дублирование массива через foreach,

Сложность O(N) - N элементарных операций, при возрастании количества элементов сложность растёт линейно.

3)рекурсивная функция нахождения факториала числа.

Сложность O(N!) - ответ прямо в вопросе

3. Определить сложность следующих алгоритмов. Сколько произойдет итераций?
1)

$n = 100;
$array[]= [];

for ($i = 0; $i < $n; $i++) {
	for ($j = 1; $j < $n; $j *= 2) {
		$array[$i][$j]= true;
	} 
}

Сложность O(N^2). В данном случае выполнится 100 * 7 = 700 раз

2)

$n = 100;
$array[] = [];

for ($i = 0; $i < $n; $i += 2) {
	for ($j = $i; $j < $n; $j++) {
		$array[$i][$j]= true;
	} 
}

Сложность O(N^2). Выполнится 100 + 98 + 96 + ... + 4 + 2 = (100 + 2) * 50 / 2 = 2550 (сумма арифметической прогрессии из 50 членов с первым равным 100 и последним равным 2).